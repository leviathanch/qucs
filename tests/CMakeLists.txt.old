project(tests CXX C)
cmake_minimum_required(VERSION 3.10.0)

# use top VERSION file
file(STRINGS ${PROJECT_SOURCE_DIR}/../VERSION QUCS_VERSION)
message(STATUS "Configuring ${PROJECT_NAME} (GUI): VERSION ${QUCS_VERSION}")

set(PROJECT_VERSION "${QUCS_VERSION}")

set(PROJECT_VENDOR "Qucs team. This program is licensed under the GNU GPL")
set(PROJECT_COPYRIGHT_YEAR "2014")
set(PROJECT_DOMAIN_FIRST "qucs")
set(PROJECT_DOMAIN_SECOND "org")

set(CMAKE_BUILD_TYPE Debug)

add_definitions(-DHAVE_CONFIG_H)

# configure the header config.h
configure_file("${PROJECT_SOURCE_DIR}/../config.h.cmake"
               "${PROJECT_BINARY_DIR}/config.h")

include_directories("${PROJECT_BINARY_DIR}" "${PROJECT_SOURCE_DIR}/../qucs")

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall ") # enable warning level
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++0x ") # enable C++11

# flag not available in mingw 4.8.2, MSVC10
if(NOT WIN32)
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wno-deprecated-register ")
endif()

find_package(Qt5 COMPONENTS Gui Svg Test Script PrintSupport REQUIRED)

add_definitions(${QT_DEFINITIONS})

set(HEADER_FILES "${PROJECT_SOURCE_DIR}/../qucs/element.h" "${PROJECT_SOURCE_DIR}/../qucs/viewpainter.h")

set(element_SRCS "element.cpp")
add_executable(element "${element_SRCS}" "${HEADER_FILES}")
target_link_libraries(element Qt::Test Qt::Core Qt::Gui Qt::Widgets Qt::Script Qt::PrintSupport Qt::Svg qucsschematic)
add_test(NAME element COMMAND element)
set(geometry0_SRCS "geometry0.cpp")
add_executable(geometry0 "${geometry0_SRCS}" "${HEADER_FILES}")
target_link_libraries(geometry0 Qt::Test Qt::Core Qt::Gui Qt::Widgets Qt::Script Qt::PrintSupport Qt::Svg qucsschematic)
add_test(NAME geometry0 COMMAND geometry0)
set(helloworld_SRCS "helloworld.cpp")
add_executable(helloworld "${helloworld_SRCS}" "${HEADER_FILES}")
target_link_libraries(helloworld Qt::Test Qt::Core Qt::Gui Qt::Widgets Qt::Script Qt::PrintSupport Qt::Svg qucsschematic)
add_test(NAME helloworld COMMAND helloworld)
set(model0_SRCS "model0.cpp")
add_executable(model0 "${model0_SRCS}" "${HEADER_FILES}")
target_link_libraries(model0 Qt::Test Qt::Core Qt::Gui Qt::Widgets Qt::Script Qt::PrintSupport Qt::Svg qucsschematic)
add_test(NAME model0 COMMAND model0)
set(model1_SRCS "model1.cpp")
add_executable(model1 "${model1_SRCS}" "${HEADER_FILES}")
target_link_libraries(model1 Qt::Test Qt::Core Qt::Gui Qt::Widgets Qt::Script Qt::PrintSupport Qt::Svg qucsschematic)
add_test(NAME model1 COMMAND model1)
set(next_idx_SRCS "next_idx.cpp")
add_executable(next_idx "${next_idx_SRCS}" "${HEADER_FILES}")
target_link_libraries(next_idx Qt::Test Qt::Core Qt::Gui Qt::Widgets Qt::Script Qt::PrintSupport Qt::Svg qucsschematic)
add_test(NAME next_idx COMMAND next_idx)
set(place0_SRCS "place0.cpp")
add_executable(place0 "${place0_SRCS}" "${HEADER_FILES}")
target_link_libraries(place0 Qt::Test Qt::Core Qt::Gui Qt::Widgets Qt::Script Qt::PrintSupport Qt::Svg qucsschematic)
add_test(NAME place0 COMMAND place0)
set(wire0_SRCS "wire0.cpp")
add_executable(wire0 "${wire0_SRCS}" "${HEADER_FILES}")
target_link_libraries(wire0 Qt::Test Qt::Core Qt::Gui Qt::Widgets Qt::Script Qt::PrintSupport Qt::Svg qucsschematic)
add_test(NAME wire0 COMMAND wire0)
set(wire1_SRCS "wire1.cpp")
add_executable(wire1 "${wire1_SRCS}" "${HEADER_FILES}")
target_link_libraries(wire1 Qt::Test Qt::Core Qt::Gui Qt::Widgets Qt::Script Qt::PrintSupport Qt::Svg qucsschematic)
add_test(NAME wire1 COMMAND wire1)
