== Various types of tests

- programs. compiled and linked against libqucs. return value (exit code)
  determines success.
- "sh". shell scripts, similar but no need to compile.
- "prj" -- projects. create netlists from various schematics,
  compare against reference.
- "qx", qucs scripts. cli end-to-end tests.

== Anatomy of a test

A test consists of running the program with different inputs, storing the
output, and comparing the output against a reference. A test is passed if
there is no difference between the output and the provided reference.

Test reference files are shipped under $(srcdir)/tests/ref. During a run,
files with the same basename are created under $(top_builddir)/tests/out.

The command "make check" runs all tests.

== Keeping track of test status (planned).

(Borrowed from Gnucap) A test hook ('{' in a suitable context) that is not
reached by the tests is followed by "untested();" or "itested();". This
indicates that the tests are incomplete and need work (Please provide tests if
you feel that an untested call is unjustified). An "itested();" call indicates
that the hook has been reached during an interactive testing session. A normal
debug build (--enable-debug) will report "untested();" hooks for better
debugging. To see or refresh the other ones, pass -DTRACE_ITESTED to the
preprocesor.
